name: CI

on:
  pull_request:
    branches: [ master ]

jobs:
  frontend:
    name: Frontend lint & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache frontend npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
      - name: Frontend lint
        working-directory: frontend
        run: npm run lint
      - name: Frontend typecheck
        working-directory: frontend
        run: |
          if npm --prefix frontend run -s typecheck --if-present; then
            echo "typecheck passed";
          else
            echo "typecheck script not defined or failed";
            # fail the job if typecheck script exists but failed
            if [ -f frontend/package.json ] && grep -q '"typecheck"' frontend/package.json; then
              exit 1;
            fi
          fi
      - name: Frontend build
        working-directory: frontend
        run: npm run build

  backend:
    name: Backend build
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache backend npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-
      - name: Install backend deps
        working-directory: backend
        run: npm ci
      - name: Backend build (tsc)
        working-directory: backend
        run: npm run build

  tests:
    name: Run tests and upload coverage
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install all deps
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci
      - name: Run backend tests if present
        working-directory: backend
        run: |
          if npm run test --silent --if-present; then
            echo "backend tests ran";
          else
            echo "no backend tests or tests failed";
            # if a test script exists but returned non-zero, fail the job
            if [ -f package.json ] && grep -q '"test"' package.json; then
              exit 1;
            fi
          fi
      - name: Run frontend tests if present
        working-directory: frontend
        run: |
          if npm run test --silent --if-present; then
            echo "frontend tests ran";
          else
            echo "no frontend tests or tests failed";
            if [ -f package.json ] && grep -q '"test"' package.json; then
              exit 1;
            fi
          fi
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            frontend/coverage/**
            backend/coverage/**
          if-no-files-found: warn
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: |
            frontend/coverage/**
            backend/coverage/**
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
